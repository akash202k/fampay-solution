# Prometheus configuration (without operator)
prometheus:
  server:
    enabled: true
    persistentVolume:
      enabled: true
      size: 50Gi
      storageClass: gp2  # AWS EBS storage class
    retention: "30d"
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 2Gi
    
    # Service configuration
    service:
      type: ClusterIP
      port: 80
    
    # Enable metric collection from Kubernetes
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
  # Enable node exporter for host metrics
  nodeExporter:
    enabled: true
    hostRootfs: true
    hostPID: true
    resources:
      limits:
        cpu: 200m
        memory: 50Mi
      requests:
        cpu: 100m
        memory: 30Mi
    
  # Enable kube-state-metrics for Kubernetes metrics
  kubeStateMetrics:
    enabled: true
    resources:
      limits:
        cpu: 100m
        memory: 150Mi
      requests:
        cpu: 10m
        memory: 32Mi
    
  # Enable Alertmanager
  alertmanager:
    enabled: true
    persistentVolume:
      enabled: true
      size: 10Gi
      storageClass: gp2
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 32Mi

# Grafana configuration
grafana:
  enabled: true
  
  # Admin credentials
  adminUser: admin
  adminPassword: "admin123"  # Change this in production!
  
  # Persistence
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: gp2
    
  # Resources
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
      
  # Service configuration
  service:
    type: ClusterIP
    port: 80
      
  # Grafana configuration
  grafana.ini:
    server:
      root_url: "%(protocol)s://%(domain)s/grafana/"
      serve_from_sub_path: true
    security:
      admin_user: admin
    analytics:
      check_for_updates: false
    log:
      mode: console
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
      
  # Data sources - automatically configure Prometheus
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://observability-prometheus-server:80
        access: proxy
        isDefault: true
        
  # Dashboard providers
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
          
  # Pre-configured dashboards
  dashboards:
    default:
      kubernetes-cluster-monitoring:
        gnetId: 7249
        revision: 1
        datasource: Prometheus
      node-exporter:
        gnetId: 1860
        revision: 23
        datasource: Prometheus
      kubernetes-pods:
        gnetId: 6336
        revision: 1
        datasource: Prometheus

# Global settings
global:
  # Image pull policy
  imagePullPolicy: IfNotPresent