kube-prometheus-stack:
  # Prometheus configuration
  prometheus:
    prometheusSpec:
      resources:
        requests:
          memory: "250Mi"
          cpu: "100m"
        limits:
          memory: "600Mi"
          cpu: "200m"
      
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: "gp2"
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 5Gi
      
      retention: 30d
      retentionSize: 20GB
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
  
  # Grafana configuration
  grafana:
    enabled: true
    
    # Admin credentials
    adminPassword: "admin123"
    
    # Persistence configuration
    persistence:
      enabled: true
      storageClassName: "gp2"
      size: 10Gi
      accessModes:
        - ReadWriteOnce
      # Add finalizer protection to prevent PVC deletion issues
      annotations:
        "helm.sh/resource-policy": "keep"
    
    # Resource limits
    resources:
      requests:
        memory: "200Mi"
        cpu: "100m"
      limits:
        memory: "500Mi"
        cpu: "200m"
    
    # Service configuration for better access
    service:
      type: ClusterIP
      port: 80
      targetPort: 3000
    
    # Security context for proper permissions
    securityContext:
      runAsUser: 472
      runAsGroup: 472
      fsGroup: 472
    
    # Pre-configured dashboards
    dashboards:
      default:
        kubernetes-cluster-monitoring:
          gnetId: 7249
          revision: 1
          datasource: Prometheus
        kubernetes-pod-monitoring:
          gnetId: 6417
          revision: 1
          datasource: Prometheus
        node-exporter:
          gnetId: 1860
          revision: 37
          datasource: Prometheus
    
    # Data source configuration
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          url: http://{{ include "kube-prometheus-stack.fullname" . }}-prometheus:9090/
          access: proxy
          isDefault: true
    
    # Environment variables for better configuration
    env:
      GF_SECURITY_ADMIN_PASSWORD: "admin123"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
  
  # AlertManager configuration
  alertmanager:
    enabled: true
    alertmanagerSpec:
      resources:
        requests:
          memory: "200Mi"
          cpu: "100m"
        limits:
          memory: "500Mi"
          cpu: "200m"
      
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: "gp2"
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 5Gi
      
      # Retention period
      retention: 120h
      
      # Security context
      securityContext:
        runAsUser: 1000
        runAsGroup: 2000
        fsGroup: 2000
  
  # Prometheus Operator configuration
  prometheusOperator:
    resources:
      requests:
        memory: "100Mi"
        cpu: "50m"
      limits:
        memory: "200Mi"
        cpu: "100m"
  
  # Node Exporter - disabled as requested
  nodeExporter:
    enabled: false
  
  # Kube State Metrics
  kubeStateMetrics:
    enabled: true
    resources:
      requests:
        memory: "100Mi"
        cpu: "50m"
      limits:
        memory: "200Mi"
        cpu: "100m"
  
  # Default rules and service monitors
  defaultRules:
    create: true
    rules:
      alertmanager: true
      etcd: true
      configReloaders: true
      general: true
      k8s: true
      kubeApiserverAvailability: true
      kubeApiserverBurnrate: true
      kubeApiserverHistogram: true
      kubeApiserverSlos: true
      kubelet: true
      kubeProxy: true
      kubePrometheusGeneral: true
      kubePrometheusNodeRecording: true
      kubernetesApps: true
      kubernetesResources: true
      kubernetesStorage: true
      kubernetesSystem: true
      kubeScheduler: true
      kubeStateMetrics: true
      network: true
      node: true
      nodeExporterAlerting: true
      nodeExporterRecording: true
      prometheus: true
      prometheusOperator: true
  
  # Global configuration
  global:
    rbac:
      create: true
      pspEnabled: false